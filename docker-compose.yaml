services:
    server:
        build:
            context: ./technical-assesment
        environment:
            NODE_ENV: production
            DATABASE_URL: ${DATABASE_URL}
            REDIS_HOST: redis
            REDIS_PORT: 6379
            REDIS_PASSWORD: ${REDIS_PASSWORD}
            RABBITMQ_HOST: rabbitmq
            RABBITMQ_PORT: 5672
            RABBITMQ_USER: ${RABBITMQ_DEFAULT_USER}
            RABBITMQ_PASS: ${RABBITMQ_DEFAULT_PASS}
        ports:
            - 3000:3000
        depends_on:
            db:
                condition: service_healthy
            redis:
                condition: service_healthy

    db:
        image: postgres
        restart: always
        user: postgres
        environment:
            - POSTGRES_DB=ta
            - POSTGRES_PASSWORD=${DB_PASSWORD}
        expose:
            - 5432
        healthcheck:
            test: ["CMD", "pg_isready"]
            interval: 10s
            timeout: 5s
            retries: 5

    redis:
        image: redis
        restart: always
        command: bash -c 'redis-server --save 20 1 --requirepass "$$REDIS_PASSWORD"'
        environment:
            - REDIS_PASSWORD=${REDIS_PASSWORD}
        healthcheck:
            test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
        expose:
            - "6379:6379"

    rabbitmq:
        image: rabbitmq:3-management
        container_name: 'rabbitmq'
        environment:
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
        ports:
            - 5672:5672
            - 15672:15672

    # Monitoring tools
    redis-insight:
        image: redis/redisinsight:latest
        ports:
            - 5540:5540
